import React, { useEffect, useState } from "react";
import { useNavigate, useParams } from "react-router-dom";

/* File updated/generated by chatgpt 4o generated code */

function BookEventPage() {
  const { navigate } = useNavigate();
  const { id } = useParams();
  const [event, setEvent] = useState(null);
  const [formData, setFormData] = useState({
    eventId: id,
    firstName: "",
    lastName: "",
    email: "",
    streetName: "",
    postalCode: "",
    city: "",
    ticketQuantity: 1,
  });

  const postBooking = async () => {
    try {
      const res = await fetch(
        `https://bookingservicenew-e7cqgagcf4cwb7e9.swedencentral-01.azurewebsites.net/api/Bookings`,
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(formData),
        }
      );
      if (res.ok) {
        alert("Booking successful!");
      } else {
        alert("Booking failed.");
      }
    } catch (err) {
      console.error("Error submitting booking", err);
      navigate("/");
    }
  };

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    await postBooking();
  };

  useEffect(() => {
    const getEvent = async () => {
      try {
        const res = await fetch(
          `https://eventservicenew-dxbphqh2cegwf7gq.swedencentral-01.azurewebsites.net/api/Events/${id}`
        );
        if (res.ok) {
          const data = await res.json();
          setEvent(data.result);
        } else {
          console.error("Failed to fetch event");
        }
      } catch (err) {
        console.error("Error fetching event", err);
      }
    };

    getEvent();
  }, [id]);

  if (!event) return <p>Loading...</p>;

  return (
    <div>
      <h1 className="book-event-h1">Book Event - {event.title}</h1>
      <div className="book-event-form-wrapper">
        <form onSubmit={handleSubmit} noValidate className="book-event-form">
          <div className="form-group">
            <label htmlFor="firstName" className="form-label">
              First Name
            </label>
            <input
              id="firstName"
              type="text"
              name="firstName"
              value={formData.firstName}
              onChange={handleChange}
              className="form-input"
              required
            />
          </div>

          <div className="form-group">
            <label htmlFor="lastName" className="form-label">
              Last Name
            </label>
            <input
              id="lastName"
              type="text"
              name="lastName"
              value={formData.lastName}
              onChange={handleChange}
              className="form-input"
              required
            />
          </div>

          <div className="form-group">
            <label htmlFor="email" className="form-label">
              Email
            </label>
            <input
              id="email"
              type="email"
              name="email"
              value={formData.email}
              onChange={handleChange}
              className="form-input"
              required
            />
          </div>

          <div className="form-group">
            <label htmlFor="streetName" className="form-label">
              Street Name
            </label>
            <input
              id="streetName"
              type="text"
              name="streetName"
              value={formData.streetName}
              onChange={handleChange}
              className="form-input"
              required
            />
          </div>

          <div className="form-group">
            <label htmlFor="ticketQuantity" className="form-label">
              Ticket Quantity
            </label>
            <input
              id="ticketQuantity"
              type="number"
              name="ticketQuantity"
              value={formData.ticketQuantity}
              onChange={handleChange}
              className="form-input"
              required
            />
          </div>

          <div className="form-horizontal-group">
            <div className="form-group">
              <label htmlFor="postalCode" className="form-label">
                Postal Code
              </label>
              <input
                id="postalCode"
                type="text"
                name="postalCode"
                value={formData.postalCode}
                onChange={handleChange}
                className="form-input"
                required
              />
            </div>

            <div className="form-group">
              <label htmlFor="city" className="form-label">
                City
              </label>
              <input
                id="city"
                type="text"
                name="city"
                value={formData.city}
                onChange={handleChange}
                className="form-input"
                required
              />
            </div>
          </div>

          <button type="submit" className="btn-primary">
            Book Now
          </button>
        </form>
      </div>
    </div>
  );
}

export default BookEventPage;

/* File updated/generated by chatgpt 4o generated code */
